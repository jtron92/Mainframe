To address the specific alerts you are seeing, including JES2_CKPT_CONFIG_N1, XCF_CDS_SPOF, and RACF_SENSITIVE_RESOURCES, you can use the DEACTIVATE command on each individual check ID, similar to the command you used for the RACF check. However, you'll need to ensure you correctly specify the check name and related parameters.

Hereâ€™s how you can handle these alerts:
General Command Structure

f hzsproc,deactivate,check=(IBMRACF,RACF_SENSITIVE_RESOURCES),exitrtn=IRRHCA00 

F HZSPROC,DEACTIVATE,CHECK=(CHECK_NAME),EXITRTN=EXIT_ROUTINE

Where:

    CHECK_NAME is the specific check name you want to deactivate.
    EXIT_ROUTINE is the exit routine associated with the check (optional in some cases).

For Each Alert

    JES2_CKPT_CONFIG_N1

F HZSPROC,DEACTIVATE,CHECK=(IBMJES2,JES2_CKPT_CONFIG_N1)

XCF_CDS_SPOF

F HZSPROC,DEACTIVATE,CHECK=(IBMXCF,XCF_CDS_SPOF)

RACF_SENSITIVE_RESOURCES You already used:

    F HZSPROC,DEACTIVATE,CHECK=(IBMRACF,RACF_SENSITIVE_RESOURCES),EXITRTN=IRRHCA00

Notes

    Verify the Impact: Before deactivating any checks, ensure that you understand their purpose. Some checks are critical to system health and security.
    Temporary or Permanent Deactivation: If you only want to deactivate a check temporarily, this command works. To prevent it from being reactivated after a restart, update the HZSPRMxx parmlib member.

To Permanently Deactivate

    Edit the HZSPRMxx member in your SYS1.PARMLIB.
    Add a DEACTIVATE statement for each check:

    DEACTIVATE CHECK=(IBMJES2,JES2_CKPT_CONFIG_N1)
    DEACTIVATE CHECK=(IBMXCF,XCF_CDS_SPOF)
    DEACTIVATE CHECK=(IBMRACF,RACF_SENSITIVE_RESOURCES)

    Restart the HZSPROC to apply changes.

Would you like detailed help on editing the parmlib or testing these changes?
You said:
ANY WAY WE CAN DEAVIATE OR BRING DOWN THIS

 06.37.17 VS01 STC00039  +DFHMN0115I CICSTS61 CICS Server z/OS WLM Health  
    -  percentage is now 100. 











In z/OS 3.1, JES2 initialization parameters are often stored in a PARMLIB member, but the naming convention and location of this member might vary based on your system's configuration. The HASJES2 member name I provided was an example and may not exist in your environment. Here's how you can find and update the correct initialization parameter member for JES2:
1. Find the Active JES2 Initialization Parmlib Member

You need to locate the member where your JES2 initialization parameters are defined.
Check the JES2 Initialization

Run the following JES2 command:

$D INITPARM

This will display the name of the active JES2 initialization member and the parmlib it is sourced from. Look for an output similar to:

$HASP842 INITPARM MEMBER=JES2PARM,LIBRARY=SYS1.PARMLIB

    MEMBER: This is the active JES2 parameter member (e.g., JES2PARM).
    LIBRARY: This is the parmlib dataset where the member resides (e.g., SYS1.PARMLIB).

2. Edit the Active Initialization Member

Once you know the active member and library:

    Open the member in the parmlib dataset using an editor, for example:

EDIT 'SYS1.PARMLIB(JES2PARM)'

Locate the CKPTDEF statement. It should look similar to this:

CKPTDEF CKPT1=(DSNAME=VSPROV.VS01.HASCKPT1,VOLSER=JCKVS1)

Update or add the CKPT2 definition and enable duplex mode:

    CKPTDEF CKPT1=(DSNAME=VSPROV.VS01.HASCKPT1,VOLSER=JCKVS1),
            CKPT2=(DSNAME=VSPROV.VS01.HASCKPT2,VOLSER=JCKVS2),
            MODE=DUPLEX

    Save the changes.

3. Apply the Changes

The changes will take effect during the next JES2 restart or IPL. To apply them immediately:
Dynamically Update JES2 Parameters:

Use JES2 commands to dynamically activate the new checkpoint:

    Activate CKPT2:

$T CKPTDEF,CKPT2=(DSNAME=VSPROV.VS01.HASCKPT2,VOLSER=JCKVS2)

Enable duplex mode:

    $T CKPTDEF,DUPLEX=ON

Verify:

Check the active configuration:

$D CKPTDEF

You should see both CKPT1 and CKPT2 in use, with DUPLEX=ON.
